'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _prefix = require('./../../_utils/prefix');

var _prefix2 = _interopRequireDefault(_prefix);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _SkeletonBox = require('./SkeletonBox');

var _SkeletonBox2 = _interopRequireDefault(_SkeletonBox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import Item from './SkeletonItem'


var Skeleton = function (_Component) {
    _inherits(Skeleton, _Component);

    function Skeleton(props) {
        _classCallCheck(this, Skeleton);

        return _possibleConstructorReturn(this, (Skeleton.__proto__ || Object.getPrototypeOf(Skeleton)).call(this, props));
    }

    _createClass(Skeleton, [{
        key: 'render',

        // static Item = Item;


        value: function render() {
            var _props = this.props,
                style = _props.style,
                prefixCls = _props.prefixCls,
                className = _props.className,
                children = _props.children;

            var selectClassName = (0, _classnames2.default)(prefixCls, className);

            return _react2.default.createElement(
                'div',
                { style: style, className: selectClassName },
                children
            );
        }
    }], [{
        key: 'SBox',
        value: function SBox() {
            return _SkeletonBox2.default;
        }
    }]);

    return Skeleton;
}(_react.Component);

exports.default = Skeleton;


Skeleton.defaultProps = {
    prefixCls: _prefix2.default.cls + '-skeleton',
    className: '',
    style: {}
};

Skeleton.propTypes = {
    prefixCls: _propTypes2.default.string,
    className: _propTypes2.default.string,
    style: _propTypes2.default.object
};