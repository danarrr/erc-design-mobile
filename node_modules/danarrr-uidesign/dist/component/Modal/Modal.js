'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _prefix = require('./../../_utils/prefix');

var _prefix2 = _interopRequireDefault(_prefix);

var _throttleDebounce = require('./../../_utils/throttleDebounce');

var _Dialog = require('./../../component/Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // todo类型检测


var Modal = function (_PureComponent) {
    _inherits(Modal, _PureComponent);

    function Modal(props) {
        _classCallCheck(this, Modal);

        var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));

        _this.state = {
            isRenderModal: _this.props.isRenderModal,
            visible: _this.props.visible
        };
        return _this;
    }

    _createClass(Modal, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(newProps) {
            if (this.state.visible !== newProps.visible) {
                this.setState({
                    isRenderModal: newProps.visible,
                    visible: newProps.visible
                    // },()=>this.setAnimationName());
                });
            } else {
                this.close();
            }
        }
    }, {
        key: 'createButton',
        value: function createButton(item) {
            return _react2.default.createElement(
                'div',
                _extends({}, item.props, { onClick: (0, _throttleDebounce.throttle)(item.onPress) }),
                item.text
            );
        }
    }, {
        key: 'close',
        value: function close() {
            // this.setAnimationName('leave');
            // setTimeout(() => {
            //     this.props.closeFn
            // }, 200);
            // todo
            // this.closeCallback();
        }
    }, {
        key: 'createTitle',
        value: function createTitle(title) {
            return title && _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)(this.props.prefixCls + '__title') },
                title
            );
        }
    }, {
        key: 'createFooter',
        value: function createFooter() {
            var _this2 = this;

            var buttons = this.props.buttons;

            return _react2.default.createElement(
                'div',
                { className: buttons.length > 2 ? (0, _classnames2.default)(this.props.prefixCls + '__radios') : (0, _classnames2.default)(this.props.prefixCls + '__buttons') },
                buttons.map(function (item) {
                    return _this2.createButton(item); // todo详细记录
                })
            );
        }
    }, {
        key: 'setAnimationName',
        value: function setAnimationName(leaveOrNot) {
            var name = this.props.transitionName;
            var transitionName = '' + name + (leaveOrNot ? '-leave' : '');

            this.setState({ transitionName: transitionName });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                children = _props.children,
                maskCloseable = _props.maskCloseable,
                maskTransitionName = _props.maskTransitionName,
                prefixCls = _props.prefixCls,
                className = _props.className,
                maskStyle = _props.maskStyle,
                title = _props.title,
                transparent = _props.transparent,
                buttons = _props.buttons,
                closable = _props.closable,
                style = _props.style,
                closeFn = _props.closeFn;


            return _react2.default.createElement(
                _Dialog2.default,
                {
                    style: style,
                    transparent: transparent,
                    transitionName: this.state.transitionName,
                    visible: this.state.visible,
                    maskStyle: maskStyle,
                    maskCloseable: maskCloseable,
                    closeFn: this.close // todo不可配置 关闭函数  如果是按钮呢
                    , boxClassName: (0, _classnames2.default)(prefixCls + '__box', className),
                    closeCallback: function closeCallback() {
                        _this3.closeCallback();
                    },
                    title: this.createTitle(title),
                    footer: closable || buttons && buttons.length > 0 ? this.createFooter() : null
                },
                _react2.default.createElement(
                    'div',
                    { className: (0, _classnames2.default)(prefixCls + '__children') },
                    children
                )
            );
        }
    }]);

    return Modal;
}(_react.PureComponent);

exports.default = Modal;


Modal.defaultProps = {
    prefixCls: _prefix2.default.cls + '-modal',
    maskTransitionName: _prefix2.default.cls + '-fade',
    style: {},
    maskStyle: {},
    className: '',
    closable: false,
    closeCallback: function closeCallback() {},

    closeFn: {},
    visible: false,
    title: '',
    transitionName: _prefix2.default.cls + '-zoom',
    buttons: [],
    buttonDirection: 'horizontally',
    maskCloseable: false,
    transparent: false,
    lang: 'cn'
};