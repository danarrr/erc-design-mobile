'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _prefix = require('./../../_utils/prefix');

var _prefix2 = _interopRequireDefault(_prefix);

var _throttleDebounce = require('./../../_utils/throttleDebounce');

var _Modal = require('./../../component/Modal');

var _Modal2 = _interopRequireDefault(_Modal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // todo类型检测


var Alert = function (_PureComponent) {
    _inherits(Alert, _PureComponent);

    function Alert(props) {
        _classCallCheck(this, Alert);

        var _this = _possibleConstructorReturn(this, (Alert.__proto__ || Object.getPrototypeOf(Alert)).call(this, props));

        _this.state = {
            visible: _this.props.visible
        };
        return _this;
    }

    _createClass(Alert, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(newProps) {
            if (this.state.visible !== newProps.visible) {
                this.setState({
                    visible: newProps.visible
                });
            } else {
                this.close();
            }
        }
    }, {
        key: 'close',
        value: function close() {
            this.setState({
                visible: false
            });

            // todo
            // this.closeCallback();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                prefixCls = _props.prefixCls,
                className = _props.className,
                title = _props.title,
                content = _props.content,
                titleImg = _props.titleImg,
                buttons = _props.buttons,
                maskCloseable = _props.maskCloseable;


            return _react2.default.createElement(
                _Modal2.default,
                {
                    transitionName: _prefix2.default.cls + '-zoom',
                    visible: this.state.visible,
                    title: title,
                    maskCloseable: maskCloseable
                    // closeCallback={() => { this.removeAlert()}}    
                    , closeFn: function closeFn() {
                        return _this2.close.bind(_this2);
                    },
                    buttons: buttons
                },
                _react2.default.createElement(
                    'div',
                    { className: (0, _classnames2.default)(prefixCls + '__children') },
                    content
                )
            );
        }
    }]);

    return Alert;
}(_react.PureComponent);

exports.default = Alert;


Alert.defaultProps = {
    prefixCls: _prefix2.default.cls + '-alert',
    className: 'ttt',
    style: {},
    title: '',
    content: null,
    titleImg: null,
    buttons: [],
    buttonDirection: 'horizontally',
    maskCloseable: false,
    closable: true,
    closeCallback: function closeCallback() {}
};