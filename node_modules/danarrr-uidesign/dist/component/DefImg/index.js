'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// 裂图处理
var DefImg = function (_PureComponent) {
    _inherits(DefImg, _PureComponent);

    function DefImg(props) {
        _classCallCheck(this, DefImg);

        var _this = _possibleConstructorReturn(this, (DefImg.__proto__ || Object.getPrototypeOf(DefImg)).call(this, props));

        _this.state = {
            src: props.defaultImg
        };

        var imgDom = document.createElement('img');
        imgDom.src = _this.props.src;

        imgDom.addEventListener('load', function () {
            _this.setState({
                src: _this.props.src
            });
        });
        imgDom.addEventListener('error', function (e) {
            console.warn('img 404' + _this.props.src);
            _this.setState({
                src: _this.props.errorImg
            });
        });

        imgDom = null;
        return _this;
    }

    _createClass(DefImg, [{
        key: 'handleError',
        value: function handleError(event) {
            var target = event.target;


            target.src = this.state.errorImg;
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            var _props = this.props,
                srcProps = _props.src,
                errorImg = _props.errorImg;
            var srcPreProps = prevProps.src;

            if (srcProps === srcPreProps) return;

            this.setState({
                src: srcProps,
                errorImg: errorImg
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var src = this.state.src;
            var isBackground = this.props.isBackground;

            var otherProps = Object.assign({}, this.props);
            var style = { backgroundImage: 'url(' + src + ')', height: '200px', width: '200px' };

            var dom = isBackground ? _react2.default.createElement('div', _extends({}, otherProps, { key: 'def-img', style: style })) : _react2.default.createElement('img', _extends({}, otherProps, { src: src, key: 'def-img', onError: this.handleError.bind(this) }));

            return [dom];
        }
    }]);

    return DefImg;
}(_react.PureComponent);

// 错误图片适配多语言环境


exports.default = DefImg;
var errorImgArr = {
    en: require('./img/error_en.jpg')
    // jp: require('global/img/error_jp.jpg'),
    // fr: require('global/img/error_fr.jpg'),
    // ru: require('global/img/error_ru.jpg'),
    // es: require('global/img/error_es.jpg'),
    // mx: require('global/img/error_mx.jpg'),
};
var errorImg = errorImgArr['en'];
DefImg.defaultProps = {
    isBackground: false, // 是用img 还是 div background-image
    src: '', // 真实的url
    // defaultImg: require('global/img/null.jpg'), // 默认的url
    errorImg: errorImg.default // 错误显示的url
};