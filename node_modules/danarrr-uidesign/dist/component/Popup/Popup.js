'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _prefix = require('./../../_utils/prefix');

var _prefix2 = _interopRequireDefault(_prefix);

var _Dialog = require('./../../component/Dialog/Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Popup = function (_PureComponent) {
    _inherits(Popup, _PureComponent);

    function Popup(props) {
        _classCallCheck(this, Popup);

        var _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, props));

        _this.state = {
            isRenderModal: _this.props.isRenderModal,
            visible: _this.props.visible,
            direction: _this.props.direction
        };
        return _this;
    }

    _createClass(Popup, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(newProps) {
            var _this2 = this;

            if (this.state.visible !== newProps.visible) {
                this.setState({
                    isRenderModal: newProps.visible,
                    visible: newProps.visible,
                    direction: newProps.direction
                }, function () {
                    return _this2.setAnimationName();
                });
            } else {
                this.close();
            }
        }
    }, {
        key: 'close',
        value: function close() {
            var _this3 = this;

            this.setAnimationName('leave');
            setTimeout(function () {
                _this3.setState({
                    visible: false
                });
            }, 200);
        }
    }, {
        key: 'createTitle',
        value: function createTitle(title) {
            return _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)(this.props.prefixCls + '__title') },
                title
            );
        }
    }, {
        key: 'setAnimationName',
        value: function setAnimationName(leaveOrNot) {
            var direction = this.state.direction;

            var transitionName = _prefix2.default.cls + '-slide-' + direction + (leaveOrNot ? '-leave' : '');

            this.setState({ transitionName: transitionName });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var _props = this.props,
                children = _props.children,
                prefixCls = _props.prefixCls,
                className = _props.className,
                maskStyle = _props.maskStyle,
                title = _props.title,
                style = _props.style;


            return _react2.default.createElement(
                _Dialog2.default,
                {
                    style: style,
                    transitionName: this.state.transitionName,
                    visible: this.state.visible,
                    maskStyle: maskStyle,
                    maskCloseable: true,
                    boxClassName: (0, _classnames2.default)(prefixCls + '__box', className),
                    closeFn: function closeFn() {
                        return _this4.close();
                    },
                    closeCallback: function closeCallback() {
                        _this4.closeCallback();
                    },
                    title: this.createTitle(title)
                },
                _react2.default.createElement(
                    'div',
                    { className: (0, _classnames2.default)(prefixCls + '__children') },
                    children
                )
            );
        }
    }]);

    return Popup;
}(_react.PureComponent);

exports.default = Popup;


Popup.defaultProps = {
    prefixCls: _prefix2.default.cls + '-popup',
    direction: 'bottom' // top left right bottom
    // preRender: false todo预渲染功能
};

Popup.propTypes = {
    prefixCls: _propTypes2.default.string,
    direction: _propTypes2.default.string
};