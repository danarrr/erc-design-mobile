'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _prefix = require('./../../_utils/prefix');

var _prefix2 = _interopRequireDefault(_prefix);

var _typeOf = require('./../../_utils/typeOf');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var prefixCls = _prefix2.default.cls + '-toast';
var _parentNode = null;

function createParentNode(specifiedpParnet) {
    var parentNode = document.createElement('div');
    if ((0, _typeOf.isDOM)(specifiedpParnet)) {
        specifiedpParnet.appendChild(parentNode);
    } else {
        document.body.appendChild(parentNode);
    }
    return parentNode;
}

function getToast(type) {
    _parentNode = createParentNode();

    _reactDom2.default.render(
    // <div className={zzcToastCls}>
    _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
            'div',
            { className: (0, _classnames2.default)(prefixCls + '-notice-content') },
            _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)(prefixCls + '-text') },
                (type === 'success' || type === 'error' || type === 'waring' || type === 'loading') && _react2.default.createElement(Icon, { type: function () {
                        switch (type) {
                            case 'success':
                                return 'success_outline';
                            case 'error':
                                return 'error_outline';
                            case 'waring':
                                return 'warning_outline';
                            case 'loading':
                                return 'loading';
                        }
                    }() }),
                _react2.default.createElement('div', { className: (0, _classnames2.default)(prefixCls + '-text-content'),
                    dangerouslySetInnerHTML: {
                        // __html: content || '错误的正文'
                        __html: '错误的正文'
                    }
                })
            )
        )
    ), _parentNode);
}

var Toast = function (_Component) {
    _inherits(Toast, _Component);

    function Toast() {
        _classCallCheck(this, Toast);

        return _possibleConstructorReturn(this, (Toast.__proto__ || Object.getPrototypeOf(Toast)).apply(this, arguments));
    }

    _createClass(Toast, null, [{
        key: 'error',
        value: function error(props) {
            getToast('info', [].concat(_toConsumableArray(props)));
        }
    }]);

    return Toast;
}(_react.Component);

exports.default = Toast;


Toast.defaultProps = {
    prefixCls: _prefix2.default.cls + '-toast',
    className: '',
    style: {},
    justify: 'flex-start',
    align: 'flex-start',
    direction: "row"
};