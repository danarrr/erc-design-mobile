'use strict';

Object.defineProperty(exports, "__esModule", {
        value: true
});

var _Popup = require('./component/Popup');

var _Popup2 = _interopRequireDefault(_Popup);

var _Alert = require('./component/Alert');

var _Alert2 = _interopRequireDefault(_Alert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import Skeleton from './component/Skeleton';
// import Toast from  './component/Toast/Toast.jsx';

// class MyComponent extends React.Component {
//   constructor() {
//       super();
//       this.state = {
//       }
//   }


//   showDialog(configProps){ 
//     this.setState({
//         visible: true, // 展示弹框
//         configProps,
//     }) 
//   }

//   showModal(configProps){
//     this.setState({
//       modalVisible: true, 
//       configProps,
//     })
//   }

//   showPopup(configProps){
//     this.setState({
//       popupVisible: true, 
//       configProps,
//     })
//   }

//   showAlert(configProps){
//     this.setState({
//       alertVisible: true, 
//       configProps,
//     })
//   }

//   closeDiglog(){
//     this.setState({
//       visible: false, 
//     })   
//   }

//   closeModal(){
//     this.setState({
//       modalVisible: false,
//     })
//   }
//   closeAlert(){
//     this.setState({
//       alertVisible: false,
//     })
//   }
// /*   思路一
// 思考需要什么配置
// 设置默认值 defaultprops
// 设置类型 没有ts的时候
// ref
// 节流
// 考虑页面同时有多个相同组件的时候
// 滑动穿透问题
// onmove?

// **/
//   render() {
//       //几种弹框类型配置
//       const {configProps} = this.state;
//       const setDialogConfig = {
//         defalutProps:{
//           content: '正文',
//           maskCloseable: true,
//         },
//         allShowProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],

//           content: "正文",
//           title: "输入标题。。",
//           maskCloseable: true,
//         }
//       }
// console.log("====toast===", Toast.error("错误信息"))
//       const setModalConfig = {
//         configBtnsProps:{
//           title:'这是配置的标题',
//           maskCloseable: true,
//           buttons: [
//               {
//                   text: '确认',
//                   onPress: () => new Promise( ( resolve ) => {
//                     setTimeout(() => {
//                       alert("可以执行回调函数可")
//                     }, 1000);
//                   } ),
//                   props: {
//                       type: 'special',
//                       style: { }
//                   }

//               },
//               {
//                 text: '取消',
//                 onPress: () => new Promise( ( resolve ) => {
//                   this.closeModal();
//                 } ),
//                 props: {
//                     type: 'special',
//                     style: {
//                       background: '#fff',
//                       color: 'green'
//                     }
//                 }

//             }
//           ],
//         },
//         defalutProps:{
//           buttons:[{ text: '关闭', onPress: () => new Promise( ( resolve ) => {
//             this.closeModal();
//           } ),}],
//           content: "正文",
//           title: "输入标题。。",
//         }
//       }

//       const setPopConfig = {
//         topProps:{
//           direction: 'top',
//           buttons:[{ 
//             text: '关闭',

//           }],

//           content: "正文",
//           title: "输入标题。。",
//         },
//         bottomProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],
//           direction: 'bottom',

//           content: "正文",
//           title: "输入标题。。",
//         },
//         leftProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],
//           direction: 'left',

//           content: "正文",
//           title: "输入标题。。",
//         },
//         rightProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],
//           direction: 'right',

//           content: "正文",
//           title: "输入标题。。",
//         }
//       }

//       const setAlertConfig = {
//         defalutProps:{
//           title: '只有标题的dialog', 
//           buttons:[{ text: '关闭', onPress: () => new Promise( ( resolve ) => {
//             this.closeAlert();
//           } ),}],
//         },
//         allShowProps:{
//           buttons:[{ 
//             text: '关闭',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeAlert();
//             }),
//           }],

//           content: "正文",
//           title: "输入标题。。",
//           maskCloseable: true,
//         },
//         buttonsProps:{
//           buttons:[{ 
//             text: '关闭',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeAlert();
//             }),
//           },{ 
//             text: '其他',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeAlert();
//             }),
//           }],

//           content: "正文",
//           title: "输入标题。。",
//         },
//         radioProps:{
//           buttons:[{ 
//             text: '关闭',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeAlert();
//             }),
//           },{ 
//             text: '其他',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeAlert();
//             }),
//           },{ 
//             text: '第三个按钮',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeAlert();
//             }),
//           }], 
//           content: "正文",
//           title: "输入标题。。",
//         },
//         maskCloseProps:{
//             maskCloseable: true, 
//             buttons:[{ 
//               text: '关闭',
//               onPress: () => new Promise( ( resolve ) => {
//                 this.closeAlert();
//               }),
//             },{ 
//               text: '其他',
//               onPress: () => new Promise( ( resolve ) => {
//                 this.closeAlert();
//               }),
//             }],
//             content: "正文",
//             title: "输入标题。。",
//           },
//         }
//       return (
//         <div>
//             <button onClick={this.showDialog.bind(this, setDialogConfig.defalutProps)}>默认Dialog</button>
//             <button onClick={this.showDialog.bind(this, setDialogConfig.allShowProps)}>有标题有正文的Dialog</button>

//             <Dialog 
//                 {...configProps}
//                 visible = {this.state.visible}
//                 closeFn={this.closeDiglog.bind(this)}
//             />

//             <hr></hr>
//             <button onClick={this.showModal.bind(this, setModalConfig.defalutProps)} >默认按钮</button>    
//             <button onClick={this.showModal.bind(this, setModalConfig.configBtnsProps)} >自定义按钮</button>    

//             <Modal
//               {...configProps}
//               visible={this.state.modalVisible}
//               // closeFn={this.closeModal.bind(this)}
//               // closeCallback={() => {  }}
//             >
//               <div className="modal-text">这是一个文案...</div>
//             </Modal>  

//           <hr></hr>
//           <button onClick={this.showPopup.bind(this, setPopConfig.bottomProps)}>从底部滑出弹框</button>    
//           <button onClick={this.showPopup.bind(this, setPopConfig.topProps)}>从顶部滑出弹框</button>    
//           <button onClick={this.showPopup.bind(this, setPopConfig.leftProps)}>从左边滑出弹框</button>    
//           <button onClick={this.showPopup.bind(this, setPopConfig.rightProps)}>从右边滑出弹框</button>    

//           <Popup
//               {...configProps}
//               visible={this.state.popupVisible}
//               closeCallback={() => { this.setState( { popupVisible: false } ); }}
//             >
//               <div className="modal-text">这是一个文案...</div>
//             </Popup>  

//           <hr></hr>
//           <button onClick={this.showAlert.bind(this, setAlertConfig.defalutProps)}>只有标题</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.allShowProps)}>有标题和正文</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.buttonsProps)}>双按钮</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.radioProps)}>单选框</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.maskCloseProps)}>点击mask关闭没生效</button>    

//           <Alert
//             {...configProps}
//             visible={this.state.alertVisible}
//           >
//           </Alert>  

//           <hr></hr>
//           <button>骨架屏初试，不可点击</button>
//           <Skeleton>
//             {/* <Skeleton.Box justify='space-between'> */}
//             12222
//                 {/* <Skeleton.Item height='34px' width='100px' />
//                 <Skeleton.Item height='34px' width='80px' /> */}
//             {/* </Skeleton.Box> */}
//             {/* <Skeleton.Box style={{ marginTop: '20px' }}>
//               <Skeleton.Item height='34px' width='100%' /> 
//             </Skeleton.Box>
//             <Skeleton.Box style={{ marginTop: '20px' }}>
//                 <Skeleton.Item height='54px' width='100%' />
//             </Skeleton.Box> */}
//           </Skeleton>
//           <hr></hr>

//         </div>
//       )
//   }
// }

// export default MyComponent;

// export { Dialog }  from './component/Dialog';
// export { Modal } from './component/Modal';
// export { Popup } from './component/Popup';
// export { Alert } from './component/Alert';
// import React from 'react';
// import ReactDom from 'react-dom';

// import Modal from './component/Modal';
exports.default = {
        Popup: _Popup2.default, Alert: _Alert2.default
};