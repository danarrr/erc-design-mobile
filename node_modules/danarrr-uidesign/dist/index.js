'use strict';

Object.defineProperty(exports, "__esModule", {
        value: true
});

var _Modal = require('./component/Modal');

var _Modal2 = _interopRequireDefault(_Modal);

var _Popup = require('./component/Popup');

var _Popup2 = _interopRequireDefault(_Popup);

var _Skeleton = require('./component/Skeleton/Skeleton');

var _Skeleton2 = _interopRequireDefault(_Skeleton);

var _Toast = require('./component/Toast/Toast');

var _Toast2 = _interopRequireDefault(_Toast);

var _Dialog = require('./component/Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

var _DefImg = require('./component/DefImg');

var _DefImg2 = _interopRequireDefault(_DefImg);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 裂图处理 
// class MyComponent extends React.Component {
//   constructor() {
//       super();
//       this.state = {
//       }
//   }


//   showDialog(configProps){ 
//     this.setState({
//         visible: true, // 展示弹框
//         configProps,
//     }) 
//   }

//   showModal(configProps){
//     this.setState({
//       modalVisible: true, 
//       configProps,
//     })
//   }

//   showPopup(configProps){
//     this.setState({
//       popupVisible: true, 
//       configProps,
//     })
//   }

//   showAlert(configProps){
//     this.setState({
//       alertVisible: true, 
//       configProps,
//     })
//   }

//   closeDiglog(){
//     this.setState({
//       visible: false, 
//     })   
//   }

//   closeModal(){
//     this.setState({
//       modalVisible: false,
//     })
//   }
//   closeAlert(){
//     this.setState({
//       alertVisible: false,
//     })
//   }
// /*   思路一
// 思考需要什么配置
// 设置默认值 defaultprops
// 设置类型 没有ts的时候
// ref
// 节流
// 考虑页面同时有多个相同组件的时候
// 滑动穿透问题
// onmove?

// **/
//   render() {
//       //几种弹框类型配置
//       const {configProps} = this.state;
//       const setDialogConfig = {
//         defalutProps:{
//           content: '正文',
//           maskCloseable: true,
//         },
//         allShowProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],

//           content: "正文",
//           title: "输入标题。。",
//           maskCloseable: true,
//         }
//       }
// console.log("====toast===", Toast.error("错误信息"))


//       // const setModalConfig = {
//       //   configBtnsProps:{
//       //     title:'这是配置的标题',
//       //     maskCloseable: true,
//       //     buttons: [
//       //         {
//       //             text: '确认',
//       //             onPress: () => new Promise( ( resolve ) => {
//       //               setTimeout(() => {
//       //                 alert("可以执行回调函数可")
//       //               }, 1000);
//       //             } ),
//       //             props: {
//       //                 type: 'special',
//       //                 style: { }
//       //             }

//       //         },
//       //         {
//       //           text: '取消',
//       //           onPress: () => new Promise( ( resolve ) => {
//       //             this.closeModal();
//       //           } ),
//       //           props: {
//       //               type: 'special',
//       //               style: {
//       //                 background: '#fff',
//       //                 color: 'green'
//       //               }
//       //           }

//       //       }
//       //     ],
//       //   },
//       //   defalutProps:{
//       //     buttons:[{ text: '关闭', onPress: () => new Promise( ( resolve ) => {
//       //       this.closeModal();
//       //     } ),}],
//       //     content: "正文",
//       //     title: "输入标题。。",
//       //   }
//       // }

//       const setPopConfig = {
//         topProps:{
//           direction: 'top',
//           buttons:[{ 
//             text: '关闭',

//           }],

//           content: "正文",
//           title: "输入标题。。",
//         },
//         bottomProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],
//           direction: 'bottom',

//           content: "正文",
//           title: "输入标题。。",
//         },
//         leftProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],
//           direction: 'left',

//           content: "正文",
//           title: "输入标题。。",
//         },
//         rightProps:{
//           buttons:[{ 
//             text: '关闭',

//           }],
//           direction: 'right',

//           content: "正文",
//           title: "输入标题。。",
//         }
//       }

//       // const setAlertConfig = {
//       const setModalConfig = {
//       defalutProps:{
//           title: '只有标题的dialog', 
//           buttons:[{ text: '关闭', onPress: () => new Promise( ( resolve ) => {
//             this.closeModal();
//           } ),}],
//         },
//         allShowProps:{
//           buttons:[{ 
//             text: '关闭',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeModal();
//             }),
//           }],

//           children: "正文",
//           title: "输入标题。。",
//           maskCloseable: true,
//         },
//         buttonsProps:{
//           buttons:[{ 
//             text: '关闭',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeModal();
//             }),
//           },{ 
//             text: '其他',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeModal();
//             }),
//           }],

//           children: "正文",
//           title: "输入标题。。",
//         },
//         radioProps:{
//           buttons:[{ 
//             text: '关闭',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeModal();
//             }),
//           },{ 
//             text: '其他',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeModal();
//             }),
//           },{ 
//             text: '第三个按钮',
//             onPress: () => new Promise( ( resolve ) => {
//               this.closeModal();
//             }),
//           }], 
//           children: "正文",
//           title: "输入标题。。",
//         },
//         maskCloseProps:{
//             maskCloseable: true, 
//             children: "正文",
//             title: "输入标题。。",
//         },
//         fullModalProps:{
//           maskCloseable: true, 
//           children: "正文正文正文正文正文正文正文正文正文正文正文正文",
//           title: "输入标题。。",
//           modalType: "full",
//         },
//       }
//       return (
//         <div>
//             <button onClick={this.showDialog.bind(this, setDialogConfig.defalutProps)}>默认Dialog</button>
//             <button onClick={this.showDialog.bind(this, setDialogConfig.allShowProps)}>有标题有正文的Dialog</button>

//             <Dialog 
//                 {...configProps}
//                 visible = {this.state.visible}
//                 closeFn={this.closeDiglog.bind(this)}
//             />

//             <hr></hr>
//             {/* <button onClick={this.showModal.bind(this, setModalConfig.defalutProps)} >默认按钮</button>    
//             <button onClick={this.showModal.bind(this, setModalConfig.configBtnsProps)} >自定义按钮</button>    

//             <Modal
//               {...configProps}
//               visible={this.state.modalVisible}
//               // closeFn={this.closeModal.bind(this)}
//               // closeCallback={() => {  }}
//             >
//               <div className="modal-text">这是一个文案...</div>
//             </Modal>   */}

//           <hr></hr>
//           <button onClick={this.showPopup.bind(this, setPopConfig.bottomProps)}>从底部滑出弹框</button>    
//           <button onClick={this.showPopup.bind(this, setPopConfig.topProps)}>从顶部滑出弹框</button>    
//           <button onClick={this.showPopup.bind(this, setPopConfig.leftProps)}>从左边滑出弹框</button>    
//           <button onClick={this.showPopup.bind(this, setPopConfig.rightProps)}>从右边滑出弹框</button>    

//           <Popup
//               {...configProps}
//               visible={this.state.popupVisible}
//               closeCallback={() => { this.setState( { popupVisible: false } ); }}
//             >
//               <div className="modal-text">这是一个文案...</div>
//             </Popup>  

//           <hr></hr>
//           {/* <button onClick={this.showAlert.bind(this, setAlertConfig.defalutProps)}>只有标题</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.allShowProps)}>有标题和正文</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.buttonsProps)}>双按钮</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.radioProps)}>单选框</button>    
//           <button onClick={this.showAlert.bind(this, setAlertConfig.maskCloseProps)}>点击mask关闭没生效</button>    

//           <Alert
//             {...configProps}
//             visible={this.state.alertVisible}
//           >
//           </Alert>   */}

//           <hr></hr>
//           <button>骨架屏初试，不可点击</button>
//           <Skeleton>
//             <Skeleton.Box style={{ marginTop: '20px',height: '50px', width: '50%' }}> 
//             </Skeleton.Box>

//             <Skeleton.Item style={{ marginTop: '20px',height: '34px', width: '100%' }}/> 
//             <Skeleton.Item style={{ marginTop: '20px',height: '54px', width: '100%' }} />
//           </Skeleton>
//           <hr></hr>

//           <button>====== modal ====== 基本配置</button>
//           <br></br>
//           <button onClick={this.showModal.bind(this, setModalConfig.defalutProps)}>只有标题</button>    
//           <button onClick={this.showModal.bind(this, setModalConfig.allShowProps)}>有标题和正文</button>    
//           <button onClick={this.showModal.bind(this, setModalConfig.buttonsProps)}>双按钮</button>    
//           <button onClick={this.showModal.bind(this, setModalConfig.radioProps)}>单选框</button>    
//           <button onClick={this.showModal.bind(this, setModalConfig.maskCloseProps)}>点击mask关闭没生效</button>    
//           <br></br>
//           <button>====== modal ====== fullModal</button>
//           <button onClick={this.showModal.bind(this, setModalConfig.fullModalProps)}>showfullModal</button>    

//           <Modal
//             {...configProps}
//             visible={this.state.modalVisible}
//           >
//           </Modal>  

//           <hr></hr>
//           裂图处理
//           <DefImg isBackground src={'hha.jpg'} className="car-thumbnail" />
//         </div>
//       )
//   }
// }

// export default MyComponent;

// import React from 'react';
// import ReactDom from 'react-dom';

exports.default = {
        Popup: _Popup2.default, Modal: _Modal2.default, Toast: _Toast2.default, Skeleton: _Skeleton2.default, Dialog: _Dialog2.default, DefImg: _DefImg2.default
};