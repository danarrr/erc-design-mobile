/// <reference types="node" />
import { Transform } from "stream";
export declare class SVGPathDataParser extends Transform {
    curCommand: any;
    state: number;
    curNumber: any;
    constructor();
    _flush(callback: () => void): void;
    _transform(chunk: Buffer, encoding: string, callback: () => void): void;
    static readonly STATE_WSP: number;
    static readonly STATE_WSPS: number;
    static readonly STATE_COMMA: number;
    static readonly STATE_COMMAS: number;
    static readonly STATE_COMMAS_WSPS: number;
    static readonly STATE_NUMBER: number;
    static readonly STATE_NUMBER_DIGITS: number;
    static readonly STATE_NUMBER_INT: number;
    static readonly STATE_NUMBER_FLOAT: number;
    static readonly STATE_NUMBER_EXP: number;
    static readonly STATE_NUMBER_EXPSIGN: number;
    static readonly STATE_NUMBER_MASK: number;
    static readonly STATE_RELATIVE: number;
    static readonly STATE_CLOSE_PATH: number;
    static readonly STATE_MOVE_TO: number;
    static readonly STATE_LINE_TO: number;
    static readonly STATE_HORIZ_LINE_TO: number;
    static readonly STATE_VERT_LINE_TO: number;
    static readonly STATE_CURVE_TO: number;
    static readonly STATE_SMOOTH_CURVE_TO: number;
    static readonly STATE_QUAD_TO: number;
    static readonly STATE_SMOOTH_QUAD_TO: number;
    static readonly STATE_ARC: number;
    static readonly STATE_COMMANDS_MASK: number;
}
